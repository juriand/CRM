<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xmlns:aop="http://www.springframework.org/schema/aop"
	     xmlns:tx="http://www.springframework.org/schema/tx"
	     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	
	<!-- ===========以下是 Businesss Service 配置 ===========-->
	
		<!-- 这里，必须要显示的注入sessionFactory
			 在UserManagerImpl中，this.getHibernateTemplate()获得的该hibernate模板
			 是对Hibernate session 的封装，那么session是怎么创建出来的呢？这个实现类中需要sessionFactory。
			 HibernateDaoSupport 代码如下：
			 public final void setSessionFactory(SessionFactory sessionFactory) {
	  			this.hibernateTemplate = createHibernateTemplate(sessionFactory);}
		 	 所以，在这里我们需要将sessionFactory注入进来，供UserManagerImpl使用。
		 -->
	
	
	<bean id="userService" class="com.crm.service.UserServiceImpl">
		<property name="userDao" ref="userDao"/>
	</bean>
	
	<bean id="opporService" class="com.crm.service.OpporServiceImpl">
		<property name="opporDao" ref="opporDao"/>
	</bean>
	
	<bean id="planService" class="com.crm.service.PlanServiceImpl">
		<property name="planDao" ref="planDao"/>
	</bean>
	
	<bean id="clientService" class="com.crm.service.ClientServiceImpl">
		<property name="clientDao" ref="clientDao"/>
	</bean>
	
	<bean id="serService" class="com.crm.service.SerServiceImpl">
		<property name="serviceDao" ref="serviceDao"/>
	</bean>
	
	<bean id="dictionService" class="com.crm.service.DictionServiceImpl">
		<property name="dictionDao" ref="dictionDao"/>
	</bean>
	
	<bean id="roleService" class="com.crm.service.RoleServiceImpl">
		<property name="roleDao" ref="roleDao"/>
		<property name="roleAuthorDao" ref="roleAuthorDao"/>
	</bean>
	
	<bean id="authorService" class="com.crm.service.AuthorServiceImpl">
		<property name="authorDao" ref="authorDao"/>
	</bean>
	
	<bean id="productService" class="com.crm.service.ProductServiceImpl">
		<property name="productDao" ref="productDao"/>
	</bean>
	
	<bean id="loseService" class="com.crm.service.LoseServiceImpl">
		<property name="loseDao" ref="loseDao"/>
	</bean>
	
	<!-- ===========以下是DAO beans 配置 ==============-->
		<!-- 这里，必须要显示的注入sessionFactory对象，
			 在UsersDaoImpl、ProdsDaoImpl、CategoryDaoImpl中，
			 this.getHibernateTemplate()获得的该hibernate模板，
			 是对Hibernate session 的封装，那么session是怎么创建出来的呢？
			 这个实现类中需要sessionFactory。HibernateDaoSupport 代码如下：
			 public final void setSessionFactory(SessionFactory sessionFactory) {
	  			this.hibernateTemplate = createHibernateTemplate(sessionFactory);}
		 	 所以，在这里我们需要将sessionFactory注入进来，
		 	 供UsersDaoImpl、ProdsDaoImpl、CategoryDaoImpl使用。
		 -->
	
	<bean id="userDao" class="com.crm.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="opporDao" class="com.crm.dao.OpporDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="planDao" class="com.crm.dao.PlanDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="clientDao" class="com.crm.dao.ClientDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="serviceDao" class="com.crm.dao.ServiceImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="dictionDao" class="com.crm.dao.DictionDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="roleDao" class="com.crm.dao.RoleDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="roleAuthorDao" class="com.crm.dao.RoleAuthorDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="authorDao" class="com.crm.dao.AuthorDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="productDao" class="com.crm.dao.ProductDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="loseDao" class="com.crm.dao.LoseDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
</beans>
